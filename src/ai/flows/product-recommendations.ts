// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI agent that recommends products based on a viewed product.
 *
 * - recommendProducts - A function that handles the product recommendation process.
 * - RecommendProductsInput - The input type for the recommendProducts function.
 * - RecommendProductsOutput - The return type for the recommendProducts function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RecommendProductsInputSchema = z.object({
  productName: z.string().describe('The name of the product currently being viewed.'),
  productDescription: z.string().describe('The description of the product currently being viewed.'),
  productCategory: z.string().describe('The category of the product currently being viewed.'),
  productImageUrl: z.string().describe('The URL of the product image currently being viewed.'),
});
export type RecommendProductsInput = z.infer<typeof RecommendProductsInputSchema>;

const RecommendProductsOutputSchema = z.object({
  recommendedProducts: z.array(
    z.object({
      name: z.string().describe('The name of the recommended product.'),
      description: z.string().describe('A short description of the recommended product.'),
      imageUrl: z.string().describe('The URL of the recommended product image.'),
      category: z.string().describe('The category of the recommended product.'),
    })
  ).describe('An array of recommended products based on the viewed product.'),
});
export type RecommendProductsOutput = z.infer<typeof RecommendProductsOutputSchema>;

export async function recommendProducts(input: RecommendProductsInput): Promise<RecommendProductsOutput> {
  return recommendProductsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'recommendProductsPrompt',
  input: {schema: RecommendProductsInputSchema},
  output: {schema: RecommendProductsOutputSchema},
  prompt: `You are a product recommendation expert for Pelwatte Dairy.

  Based on the product the user is currently viewing, recommend other relevant products that the user might be interested in.
  Provide the product name, description, image URL and category for each recommended product.

  Viewed Product Name: {{{productName}}}
  Viewed Product Description: {{{productDescription}}}
  Viewed Product Category: {{{productCategory}}}
  Viewed Product Image URL: {{{productImageUrl}}}

  Recommend at least 3 products.
  Format your answer as a JSON array of products, each with name, description, imageUrl and category fields.
  `,
});

const recommendProductsFlow = ai.defineFlow(
  {
    name: 'recommendProductsFlow',
    inputSchema: RecommendProductsInputSchema,
    outputSchema: RecommendProductsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
